// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UltraPlayMarkets.Data;

namespace UltraPlayMarkets.Migrations
{
    [DbContext(typeof(MarketsDbContext))]
    partial class MarketsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("UltraPlayMarkets.Models.Bet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsLive")
                        .HasColumnType("bit");

                    b.Property<int?>("MatchId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.ToTable("Bet");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SportId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SportId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EventID")
                        .HasColumnType("int");

                    b.Property<int>("MatchType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EventID");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Odd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BetId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialBetValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BetId");

                    b.ToTable("Odd");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Bet", b =>
                {
                    b.HasOne("UltraPlayMarkets.Models.Match", null)
                        .WithMany("Bets")
                        .HasForeignKey("MatchId");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Event", b =>
                {
                    b.HasOne("UltraPlayMarkets.Models.Sport", null)
                        .WithMany("Events")
                        .HasForeignKey("SportId");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Match", b =>
                {
                    b.HasOne("UltraPlayMarkets.Models.Event", null)
                        .WithMany("Matches")
                        .HasForeignKey("EventID");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Odd", b =>
                {
                    b.HasOne("UltraPlayMarkets.Models.Bet", null)
                        .WithMany("Odds")
                        .HasForeignKey("BetId");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Bet", b =>
                {
                    b.Navigation("Odds");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Event", b =>
                {
                    b.Navigation("Matches");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Match", b =>
                {
                    b.Navigation("Bets");
                });

            modelBuilder.Entity("UltraPlayMarkets.Models.Sport", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
